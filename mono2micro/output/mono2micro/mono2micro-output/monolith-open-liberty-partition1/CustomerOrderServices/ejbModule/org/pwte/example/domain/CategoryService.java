package org.pwte.example.domain;

import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.Consumes;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import java.util.logging.Logger;

import com.ibm.cardinal.util.CardinalException;
import com.ibm.cardinal.util.CardinalLogger;
import com.ibm.cardinal.util.CardinalString;
import com.ibm.cardinal.util.ClusterObjectManager;
import com.ibm.cardinal.util.SerializationUtil;
import java.io.Serializable;
import java.util.Collection;
import javax.json.bind.annotation.JsonbProperty;
import javax.json.bind.annotation.JsonbTransient;

/**
 * Service class for Category - Generated by Cardinal
 */

@Path("/CategoryService")
public class CategoryService {
    private static final Logger klu__logger = CardinalLogger.getLogger(CategoryService.class);

    // default constructor service
    @POST
    @Path("/Category_default_ctor")
    @Produces(MediaType.APPLICATION_JSON) 
    public Response Category_default_ctor() {
        Category instCategory = new Category();
        String refid = ClusterObjectManager.putObject(instCategory);
        instCategory.setKlu__referenceID(refid);
        JsonObject jsonobj = Json
            .createObjectBuilder()
            .add("return_value", refid)
            .build();
        klu__logger.info("[CategoryService] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();
    }



    // health check service
    @GET 
    @Path("/health") 
    @Produces(MediaType.TEXT_HTML) 
    public String getHealth() { 
        klu__logger.info("[Category] getHealth() called");
        return "CategoryService::Health OK"; 
    }



    // service for incrementing object reference count
    @POST
    @Path("/incObjectCount")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void incObjectCount(@FormParam("klu__referenceID") String klu__referenceID) {
        klu__logger.info("[CategoryService] incObjectCount() called with ref: "+klu__referenceID);
        ClusterObjectManager.incObjectCount(klu__referenceID);
    }



    // service for decrementing object reference count
    @POST
    @Path("/decObjectCount")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void decObjectCount(@FormParam("klu__referenceID") String klu__referenceID) {
        klu__logger.info("[Category] decObjectCount() called with ref: "+klu__referenceID);
        ClusterObjectManager.decObjectCount(klu__referenceID);
    }





    @POST
    @Path("/getId")
    @Produces(MediaType.APPLICATION_JSON)
    public Response getId(
        @FormParam("klu__referenceID") String klu__referenceID,
        @Context HttpServletResponse servletResponse
    ) {

        int response;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Category instCategory = (Category)ClusterObjectManager.getObject(klu__referenceID);

        try {
            response = instCategory.getId();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method getId() of Category raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        JsonObjectBuilder jsonresp = Json.createObjectBuilder();
        JsonObject jsonobj = jsonresp.add("return_value", String.valueOf(response)).build();
        klu__logger.info("[Category] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();

    }

    @POST
    @Path("/setId")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void setId(
        @FormParam("klu__referenceID") String klu__referenceID,
        @FormParam("categoryID") String categoryID,
        @Context HttpServletResponse servletResponse
    ) {

        int categoryID_fpar = Integer.parseInt(categoryID);

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Category instCategory = (Category)ClusterObjectManager.getObject(klu__referenceID);

        try {
            instCategory.setId(categoryID_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method setId() of Category raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }

    }

    @POST
    @Path("/getName")
    @Produces(MediaType.APPLICATION_JSON)
    public Response getName(
        @FormParam("klu__referenceID") String klu__referenceID,
        @Context HttpServletResponse servletResponse
    ) {

        String response;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Category instCategory = (Category)ClusterObjectManager.getObject(klu__referenceID);

        try {
            response = instCategory.getName();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method getName() of Category raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        JsonObjectBuilder jsonresp = Json.createObjectBuilder();
        JsonObject jsonobj = jsonresp.add("return_value", response).build();
        klu__logger.info("[Category] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();

    }

    @POST
    @Path("/setName")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void setName(
        @FormParam("klu__referenceID") String klu__referenceID,
        @FormParam("name") String name,
        @Context HttpServletResponse servletResponse
    ) {

        String name_fpar = name;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Category instCategory = (Category)ClusterObjectManager.getObject(klu__referenceID);

        try {
            instCategory.setName(name_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method setName() of Category raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }

    }

    @POST
    @Path("/getSubCategories")
    @Produces(MediaType.APPLICATION_JSON)
    public Response getSubCategories(
        @FormParam("klu__referenceID") String klu__referenceID,
        @Context HttpServletResponse servletResponse
    ) {

        Collection<Category> response;

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Category instCategory = (Category)ClusterObjectManager.getObject(klu__referenceID);

        try {
            response = instCategory.getSubCategories();
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method getSubCategories() of Category raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }
        JsonObjectBuilder jsonresp = Json.createObjectBuilder();
        
        // convert physical/proxy object(s) referenced by "response" to reference ID(s)
        String response_obj = SerializationUtil.encodeWithDynamicTypeCheck(response);
        JsonObject jsonobj = jsonresp.add("return_value", response_obj).build();

        klu__logger.info("[Category] Returning JSON object: "+jsonobj.toString());
        return Response
            .status(Response.Status.OK)
            .entity(jsonobj)
            .build();

    }

    @POST
    @Path("/setSubCategories")
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    public void setSubCategories(
        @FormParam("klu__referenceID") String klu__referenceID,
        @FormParam("subCategories") String subCategories,
        @Context HttpServletResponse servletResponse
    ) {

        
        // convert reference ID(s) stored in "subCategories" to physical/proxy object(s)
        Collection<Category> subCategories_fpar = (Collection<Category>)SerializationUtil.decodeWithDynamicTypeCheck(subCategories);

        // dynamically dispatched method: using reference ID, get object from cluster object manager and
        // call method on the object
        Category instCategory = (Category)ClusterObjectManager.getObject(klu__referenceID);

        try {
            instCategory.setSubCategories(subCategories_fpar);
        }
        catch (java.lang.Throwable t) {
            String msg = "Call to method setSubCategories() of Category raised exception: "+t.getMessage();
            klu__logger.warning(msg);
            throw new WebApplicationException(msg, t, CardinalException.APPLICATION_EXCEPTION);
        }

    }

}