version: '3.5'

networks:
  default:
    external:
      name: store-front-network

services:
    reverseproxy:
        image: proxy-nginx
        container_name: proxy-nginx
        ports:
            - 80:80
            - 443:443
        restart: always

    storefront-backend-quarkus:
        image: storefront-backend-quarkus
        container_name: storefront-backend-quarkus
        restart: always
        environment:
          - CONTAINER=storefront-backend-quarkus
        ports:
            - 9082:8080
            - 9445:9443

    storefront-frontend:
        image: storefront-frontend
        container_name: storefront-frontend
        restart: always
        environment:
          - CONTAINER=storefront-frontend
        ports:
            - 9081:9080
            - 9444:9443

    storefront-catalog-reactive:
        image: storefront-catalog-reactive
        container_name: storefront-catalog-reactive
        restart: always
        environment:
          - CONTAINER=storefront-catalog-reactive
        ports:
            - 9083:8082  

    storefront-db2:        
        image: storefront-db2
        container_name: storefront-db2
        privileged: true
        ports:
          - "5000:5000"
          - "50000:50000"
          - "60000:60000"
        environment:
          - LICENSE=accept
          - DB2INST1_PASSWORD=db2inst1
          - DBNAME=orderdb
        restart: always

    database-postgres:        
        image: postgres
        container_name: postgres
        privileged: true
        ports:
          - "5432:5432"
        environment:
          - POSTGRES_DB=postgres
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - PGDATA=/temp/data
        restart: always

    zookeeper:
      image: strimzi/kafka:0.19.0-kafka-2.5.0
      container_name: zookeeper
      command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
      ports:
        - "2181:2181"
      environment:
        LOG_DIR: /tmp/logs

    kafka:
      image: strimzi/kafka:0.19.0-kafka-2.5.0
      container_name: kafka
      command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
      ]
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        LOG_DIR: "/tmp/logs"
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          